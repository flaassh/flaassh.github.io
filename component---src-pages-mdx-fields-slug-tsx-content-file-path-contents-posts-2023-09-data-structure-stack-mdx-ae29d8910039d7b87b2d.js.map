{"version":3,"file":"component---src-pages-mdx-fields-slug-tsx-content-file-path-contents-posts-2023-09-data-structure-stack-mdx-ae29d8910039d7b87b2d.js","mappings":"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","sources":["webpack://flash/./contents/images/2023/09/stack.webp","webpack://flash/./contents/posts/2023/09/data-structure-stack.mdx","webpack://flash/./src/pages/{mdx.fields__slug}.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/stack-b9932ad24eefe6617d1363373bff88f5.webp\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport img from \"../../../images/2023/09/stack.webp\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    hr: \"hr\",\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"오늘은 자료 구조 중 stack 구조에 대해 알아봐요.\"), \"\\n\", React.createElement(_components.p, null, \"오늘 포스팅의 목표는 여러분이 이 포스팅의 썸네일을 이해하는 거에요!\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"1-stack-구조란\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-stack-%EA%B5%AC%EC%A1%B0%EB%9E%80\",\n    \"aria-label\": \"1 stack 구조란 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. stack 구조란?\"), \"\\n\", React.createElement(_components.p, null, \"사실 크게 어려울 건 없어요.\\n왜냐하면, stack 구조는 우리가 일상에서 너무 많이 접하는 구조이기 때문이죠.\"), \"\\n\", React.createElement(_components.p, null, \"옷을 넣는 수납함이 있다고 생각해보세요.\\n그 수납함에 옷을 차곡차곡 쌓아서 넣어놨는데 맨 아래에 있는 옷을 꺼내야한다고 가정해볼게요.\"), \"\\n\", React.createElement(_components.p, null, \"꺼내야 하는 옷 위에 다른 옷들을 건드리지 않고 꺼내야 하는 옷을 꺼낼 수 있을까요?\"), \"\\n\", React.createElement(_components.p, null, \"맞아요. 불가능하죠? 맨 아래 옷은 위 옷들을 전부 꺼낸 후에야 꺼낼 수 있어요.\"), \"\\n\", React.createElement(_components.p, null, \"이게 바로 stack 구조에요. 참 쉽죠?\"), \"\\n\", React.createElement(_components.p, null, \"이러한 구조를 우리는 LIFO(Last In First Out)구조라고 해요. 마지막에 들어간 게 처음으로 나온다. 여기까지만 이해하시면 이론은 끝입니다.\"), \"\\n\", React.createElement(_components.p, null, \"stack 구조라는 건 입구가 하나뿐인 바구니에 우리가 원하는 물건을 넣고 위에서부터 차례대로 빼는 거라고 생각하시면 편해요.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"2-stack-구현\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-stack-%EA%B5%AC%ED%98%84\",\n    \"aria-label\": \"2 stack 구현 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. stack 구현\"), \"\\n\", React.createElement(_components.p, null, \"대부분의 언어들에서는 이미 stack, queue 등이 모두 최적화된 상태로 바로 사용할 수 있게 제공되기 때문에 C언어로 구현해볼게요.\"), \"\\n\", React.createElement(_components.p, null, \"사실 자료 구조 자체를 제대로 이해하고 구현할 수 있으면 언어는 크게 문제가 없어요.\\n(문제 없다는 건 성능을 말하는 게 아니고 언어에 구애받지 않는 실력을 말하는 거에요.)\"), \"\\n\", React.createElement(_components.p, null, \"위에서 stack 구조를 이해해봤으니 이제 구현해봐요.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"2-1-필요한-변수\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-1-%ED%95%84%EC%9A%94%ED%95%9C-%EB%B3%80%EC%88%98\",\n    \"aria-label\": \"2 1 필요한 변수 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2-1. 필요한 변수\"), \"\\n\", React.createElement(_components.p, null, \"이해는 했는데 그럼 구현은 어떻게 해야될까요?\"), \"\\n\", React.createElement(_components.p, null, \"먼저 필요한 변수들을 정의해야해요.\"), \"\\n\", React.createElement(_components.p, null, \"구조체 형태로 Stack을 만들어봤는데요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"top\")), \"\\n\", React.createElement(_components.p, null, \"현재 스텍이 얼마나 차있는지를 의미하는 변수에요.\"), \"\\n\", React.createElement(_components.p, null, \"초기값을 -1로 두고 array에 값이 채워질 때마다 +1 해줘서 배열의 가장 마지막에 들어온 아이템을 가리키는 인덱스 역할을 해줄 거에요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"array\")), \"\\n\", React.createElement(_components.p, null, \"스텍을 쌓을 공간이에요. 위의 설명을 빌리자면 옷을 넣을 수납함인 거죠.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c\"\n  }, \"#define ARRAY_SIZE 6\\n\\ntypedef struct STACK {\\n    int top;\\n    char array[ARRAY_SIZE];\\n} Stack;\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"2-2-필요한-함수\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-2-%ED%95%84%EC%9A%94%ED%95%9C-%ED%95%A8%EC%88%98\",\n    \"aria-label\": \"2 2 필요한 함수 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2-2. 필요한 함수\"), \"\\n\", React.createElement(_components.p, null, \"항상 반복적으로 사용하는 코드들은 어떻게 해야한다? 함수화 시켜야한다~!\"), \"\\n\", React.createElement(_components.p, null, \"함수화 시켜두면 변경사항이 생길 때 한 부분만 고치면 해당 함수를 사용하는 모든 코드 부분에 적용되기 때문에 유지보수가 쉬워지고 실수가 적어지니까 꼭! 함수화 시키는 연습을 해주세요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"int isEmpty(Stack stack)\")), \"\\n\", React.createElement(_components.p, null, \"stack이 비어있는지 여부를 확인해주는 함수에요.\"), \"\\n\", React.createElement(_components.p, null, \"top 변수의 초기값을 -1로 둔다고 했으니 -1인지만 확인하면 되겠죠?\"), \"\\n\", React.createElement(_components.p, null, \"(c언어에는 boolean 값이 없어서 참이면 1 거짓이면 0으로 반환되요.)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"int size(Stack stack)\")), \"\\n\", React.createElement(_components.p, null, \"stack에 몇 개의 아이템이 들어있는지 확인해주는 함수에요.\"), \"\\n\", React.createElement(_components.p, null, \"top 변수가 마지막에 들어온 아이템을 가리키는 인덱스 역할을 한다고 했으니 +1을 해주면 아이템 개수를 쉽게 알 수 있어요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"char getTop(Stack stack)\")), \"\\n\", React.createElement(_components.p, null, \"stack에 마지막으로 들어온 아이템을 반환하는 함수에요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"void push(Stack *stack, char item)\")), \"\\n\", React.createElement(_components.p, null, \"stack에 아이템을 넣어주는 함수에요.\"), \"\\n\", React.createElement(_components.p, null, \"top index를 하나씩 늘려가면서 array 배열에 차례대로 채워넣어요.\"), \"\\n\", React.createElement(_components.p, null, \"(c언어의 함수는 기본적으로 call by value 방식으로 작동하기 때문에 stack 내부의 변수들을 수정하려면 포인터를 사용해줘야해요.)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"char pop(Stack *stack)\")), \"\\n\", React.createElement(_components.p, null, \"stack의 마지막 아이템을 빼주는 함수에요.\"), \"\\n\", React.createElement(_components.p, null, \"top index를 줄여가면서 array 배열에서 차례때로 빼주세요.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c\"\n  }, \"#define STACK_FULL_MSG \\\"stack is already full\\\\n\\\"\\n#define STACK_PUSH_MSG \\\"push %c into stack\\\\n\\\"\\n#define STACK_EMPTY_MSG \\\"stack is empty now\\\\n\\\"\\n\\nint isEmpty(Stack stack)\\n{\\n    return stack.top == -1;\\n}\\n\\nint size(Stack stack)\\n{\\n    return stack.top + 1;\\n}\\n\\nchar getTop(Stack stack)\\n{\\n    if (isEmpty(stack))\\n    {\\n        printf(STACK_EMPTY_MSG);\\n        return '#';\\n    }\\n    return stack.array[stack.top];\\n}\\n\\nvoid push(Stack *stack, char item)\\n{\\n    if (size(*stack) == ARRAY_SIZE - 1)\\n    {\\n        printf(STACK_FULL_MSG);\\n        return;\\n    }\\n    stack->array[++stack->top] = item;\\n    printf(STACK_PUSH_MSG, item);\\n}\\n\\nchar pop(Stack *stack)\\n{\\n    if (isEmpty(*stack))\\n    {\\n        printf(STACK_EMPTY_MSG);\\n        return '#';\\n    }\\n    char item = stack->array[stack->top];\\n    stack->array[stack->top--] = '\\\\0';\\n    return item;\\n}\\n\")), \"\\n\", React.createElement(_components.h3, {\n    id: \"2-3-메일-함수\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-3-%EB%A9%94%EC%9D%BC-%ED%95%A8%EC%88%98\",\n    \"aria-label\": \"2 3 메일 함수 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2-3. 메일 함수\"), \"\\n\", React.createElement(_components.p, null, \"stack 변수의 top과 array 변수를 각각 -1, \", \"\\0\", \"로 초기화해서 k, c, a, t, s를 순서대로 push하고 마지막에 모두 pop하면 어떤 단어가 나올까요?\"), \"\\n\", React.createElement(\"center\", null, React.createElement(\"img\", {\n    src: img,\n    style: {\n      maxWidth: \"100%\",\n      height: 800\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"바로 stack이에요.\"), \"\\n\", React.createElement(_components.p, null, \"이제 썸네일의 의미를 아시겠나요? 누워있는 스텍 배열에 k, c, a, t, s 아이템이 순서대로 push한 형태인거죠.\"), \"\\n\", React.createElement(_components.p, null, \"순서대로 pop하면 오늘 코딩결과와 똑같이 stack이에요.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c\"\n  }, \"int main()\\n{\\n    Stack stack =\\n        {\\n            -1,\\n            {\\\"\\\\0\\\"}};\\n\\n    push(&stack, 'k');\\n    push(&stack, 'c');\\n    push(&stack, 'a');\\n    push(&stack, 't');\\n    push(&stack, 's');\\n\\n    while (!isEmpty(stack))\\n    {\\n        printf(\\\"%c\\\", pop(&stack));\\n    }\\n\\n    return 0;\\n}\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"3-stack-실제-사용-사례\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-stack-%EC%8B%A4%EC%A0%9C-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80\",\n    \"aria-label\": \"3 stack 실제 사용 사례 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. stack 실제 사용 사례\"), \"\\n\", React.createElement(_components.p, null, \"그래 다 좋다! 좋은데! 그래서 언제 쓰는데? 별로 쓸모 없을 것 같은데... 라고 생각하신다면 천만의 말씀!\"), \"\\n\", React.createElement(_components.p, null, \"생각보다 우리 주변에서 많이 쓰이는 데이터 구조에요.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"3-1-웹-브라우저-뒤로가기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-1-%EC%9B%B9-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%92%A4%EB%A1%9C%EA%B0%80%EA%B8%B0\",\n    \"aria-label\": \"3 1 웹 브라우저 뒤로가기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3-1. 웹 브라우저 뒤로가기\"), \"\\n\", React.createElement(_components.p, null, \"크롬, 네이버 웨일, 엣지, 사파리 등 많은 브라우저에서 공통적으로 지원하는 기능인 뒤로가기 버튼도 stack을 이용한 거에요.\"), \"\\n\", React.createElement(_components.p, null, \"여러분이 보고 있는 페이지도 스텍으로 쌓여있는 거죠.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"3-2-ctrlz-cmdz\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-2-ctrlz-cmdz\",\n    \"aria-label\": \"3 2 ctrlz cmdz permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3-2. ctrl+z, cmd+z\"), \"\\n\", React.createElement(_components.p, null, \"윈도우의 경우에는 ctrl+z, 맥의 경우에는 cmd+z 문서 작업이나 코딩 막 하다가 뒤로 돌릴 때 쓰는 단축키!\"), \"\\n\", React.createElement(_components.p, null, \"이것도 여러분의 동작들을 stack 형식으로 push해두었다가 pop하는 형식이에요.\"), \"\\n\", React.createElement(_components.p, null, \"정말 신기하죠?\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"전체-코드\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\",\n    \"aria-label\": \"전체 코드 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"전체 코드\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/flaassh/data-structures/tree/main/stack\"\n  }, \"https://github.com/flaassh/data-structures/tree/main/stack\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, {\n    id: \"정리하며\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%A0%95%EB%A6%AC%ED%95%98%EB%A9%B0\",\n    \"aria-label\": \"정리하며 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"정리하며\"), \"\\n\", React.createElement(_components.p, null, \"오늘은 stack 구조에 대해 이해하고 구현하기, 실제 사용 사례들에 대해 알아봤어요.\"), \"\\n\", React.createElement(_components.p, null, \"생각보다 어렵지 않죠? 뭐든지 이해하고 나면 구현해보는 습관을 들이시는 걸 추천드려요.\"), \"\\n\", React.createElement(_components.p, null, \"구현하면서 머리를 쓸 수록 그 구조가 더 머리에 깊게 남고 다른 곳에 이용할 수 있는 계기가 될 거에요.\"), \"\\n\", React.createElement(_components.p, null, \"포스팅 읽으면서 따라오시느라 고생하셨어요!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/millo/dev/blog/flash/contents/posts/2023/09/data-structure-stack.mdx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport CommonPageContainer from \"../components/common/CommonPageContainer\";\nimport CommonHeader from \"../components/header/CommonHeader\";\nimport palette from \"../libs/styles/palette\";\nimport media from \"../libs/styles/media\";\nimport Utterances from \"../components/common/Utterances\";\nimport CodeBlock from \"../components/common/CodeBlock\";\nimport SEO from \"../components/common/SEO\";\nimport dateFormatter from \"../libs/formatter\";\nconst BodyContainer = styled.div.withConfig({\n  displayName: \"mdxfields__slug__BodyContainer\",\n  componentId: \"sc-13a3pz0-0\"\n})([\"width:100%;\"]);\nconst ContentContainer = styled.div.withConfig({\n  displayName: \"mdxfields__slug__ContentContainer\",\n  componentId: \"sc-13a3pz0-1\"\n})([\"width:100%;max-width:860px;margin:auto;padding-top:78px;margin-bottom:40px;\", \"{max-width:928px;padding:78px 34px 0;}\", \"{padding:78px 20px 0;}\"], media.custom(1199), media.custom(767));\nconst CategoryLabel = styled.span.withConfig({\n  displayName: \"mdxfields__slug__CategoryLabel\",\n  componentId: \"sc-13a3pz0-2\"\n})([\"color:black;font-size:0.875em;font-weight:600;margin-bottom:8px;\"]);\nconst TitleLabel = styled.h1.withConfig({\n  displayName: \"mdxfields__slug__TitleLabel\",\n  componentId: \"sc-13a3pz0-3\"\n})([\"font-size:1.5em;font-weight:400;color:\", \";margin-bottom:10px;\"], palette.viloet[6]);\nconst DateContainer = styled.div.withConfig({\n  displayName: \"mdxfields__slug__DateContainer\",\n  componentId: \"sc-13a3pz0-4\"\n})([\"margin-bottom:12px;p{color:\", \";font-size:0.8em;}\"], palette.gray[6]);\nconst MdxContainer = styled.div.withConfig({\n  displayName: \"mdxfields__slug__MdxContainer\",\n  componentId: \"sc-13a3pz0-5\"\n})([\"width:100%;h2,h3,h4,h5,h6{font-weight:400;}.h2-div{margin:29px 0 22px;padding-left:10px;padding-bottom:2px;border-left:5px solid \", \";border-top-left-radius:2px;border-bottom-left-radius:2px;}h2{font-size:1.5em;\", \"{font-size:1.25em;}.anchor{left:-15px;}}.anchor{svg{width:20px;height:20px;fill:\", \";}}h3{margin:22px 0 15px;}h4{margin-bottom:10px;}h6{color:\", \";}a:not(.anchor){color:\", \";&:hover{color:\", \";font-weight:500;font-size:1.05em;transition:0.5s;}}p{font-size:1em;margin-bottom:22px;line-height:1.6;}hr{background-color:\", \";height:1px;border:0;margin:20px 0 40px;}.gatsby-resp-image-wrapper{margin-bottom:20px;}li{font-size:1em;margin-bottom:6px;}pre{margin:0;}strong{color:\", \";}\"], palette.viloet[6], media.custom(767), palette.viloet[6], palette.gray[5], palette.viloet[5], palette.viloet[7], palette.gray[2], palette.viloet[6]);\nconst FooterContainer = styled.div.withConfig({\n  displayName: \"mdxfields__slug__FooterContainer\",\n  componentId: \"sc-13a3pz0-6\"\n})([\"width:100%;\"]);\nconst components = {\n  h2: props => React.createElement(\"div\", {\n    className: \"h2-div\"\n  }, React.createElement(\"h2\", props)),\n  code: CodeBlock\n};\nfunction PostTemplate(_ref) {\n  let {data, children} = _ref;\n  return React.createElement(CommonPageContainer, null, React.createElement(CommonHeader, null), React.createElement(BodyContainer, null, React.createElement(ContentContainer, null, data.mdx.frontmatter.category !== undefined && React.createElement(CategoryLabel, null, data.mdx.frontmatter.category), React.createElement(TitleLabel, null, data.mdx.frontmatter.title), React.createElement(DateContainer, null, React.createElement(\"p\", null, \"\\uAC8C\\uC2DC: \", dateFormatter(data.mdx.frontmatter.created_at)), data.mdx.frontmatter.updated_at && React.createElement(\"p\", null, \"\\uC218\\uC815: \", dateFormatter(data.mdx.frontmatter.updated_at))), React.createElement(MdxContainer, null, React.createElement(MDXProvider, {\n    components: components\n  }, children)))), React.createElement(FooterContainer, null, React.createElement(Utterances, null)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"1049095668\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    description: data.mdx.frontmatter.description,\n    pathname: data.mdx.fields.slug,\n    image: data.mdx.frontmatter.thumbnail.childImageSharp.fixed.src,\n    created_at: data.mdx.frontmatter.created_at,\n    updated_at: data.mdx.frontmatter.updated_at\n  });\n};\n"],"names":["_createMdxContent","props","_components","Object","assign","p","hr","h2","a","span","h3","strong","pre","code","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","src","img","maxWidth","height","wrapper","MDXLayout","BodyContainer","styled","div","withConfig","displayName","componentId","ContentContainer","media","custom","CategoryLabel","TitleLabel","h1","palette","viloet","DateContainer","gray","MdxContainer","FooterContainer","CodeBlock","PostTemplate","_ref","data","children","CommonPageContainer","CommonHeader","undefined","mdx","frontmatter","category","title","dateFormatter","created_at","updated_at","MDXProvider","Utterances","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","SEO","description","pathname","fields","slug","image","thumbnail","childImageSharp","fixed"],"sourceRoot":""}