"use strict";(self.webpackChunkflash=self.webpackChunkflash||[]).push([[805],{7578:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(1151),r=n(7294),i=n.p+"static/navigation-1-0-0fd883f9d47337a6bc9f934dee7a254a.webp",c=n.p+"static/navigation-1-1-70b933a30379aacec9ada47d2fc92da2.webp";function l(e){const t=Object.assign({p:"p",a:"a",hr:"hr",h2:"h2",span:"span",pre:"pre",code:"code",h3:"h3"},(0,a.a)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.p,null,"오늘은 react-navigation 오픈 소스를 사용하여 react-native에서의 화면 전환에 대해 알아보도록 해요."),"\n",r.createElement(t.p,null,"우선 ",r.createElement(t.a,{href:"https://reactnavigation.org/docs/getting-started/"},"공식문서"),"를 켜놓으시면 더 편하게 따라오실 수 있어요. 블로그 글도 간단하게 한글로 정리되서 좋지만 항상 공식문서를 읽는 습관을 들이는게 좋아요."),"\n",r.createElement(t.hr),"\n",r.createElement(t.h2,{id:"1-프로젝트-만들기",style:{position:"relative"}},r.createElement(t.a,{href:"#1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0","aria-label":"1 프로젝트 만들기 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. 프로젝트 만들기"),"\n",r.createElement(t.p,null,"우선 프로젝트를 한 번 만들어보도록 하죠."),"\n",r.createElement(t.p,null,"mac이면 터미널 window면 cmd를 켜서 react-native 프로젝트를 만들어주세요."),"\n",r.createElement(t.p,null,"저는 navigation이라는 이름의 react-native 프로젝트를 한 번 만들어볼게요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-bash"},"# npx react-native init {프로젝트명}\nnpx react-native init navigation\n")),"\n",r.createElement(t.h2,{id:"2-react-navigation-설치",style:{position:"relative"}},r.createElement(t.a,{href:"#2-react-navigation-%EC%84%A4%EC%B9%98","aria-label":"2 react navigation 설치 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. react-navigation 설치"),"\n",r.createElement(t.p,null,"공식문서에서 말하는대로 dependencies와 함께 react-navigation을 설치해볼게요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-bash"},"# cd {생성한 프로젝트명}\ncd navigation\n\n# react-navigation/native와 react-navigation/stack \n# react-navigation/native의 dependencies인 react-native-screens, react-native-safe-area-context\n# react-navigation/stack의 dependency인 react-native-gesture-handler 를 함께 설치\nyarn add @react-navigation/native @react-navigation/stack react-native-screens react-native-safe-area-context react-native-gesture-handler\n")),"\n",r.createElement(t.h3,{id:"2-1-ios-추가-작업",style:{position:"relative"}},r.createElement(t.a,{href:"#2-1-ios-%EC%B6%94%EA%B0%80-%EC%9E%91%EC%97%85","aria-label":"2 1 ios 추가 작업 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2-1. ios 추가 작업"),"\n",r.createElement(t.p,null,"ios는 방금 설치한 모듈들을 연결하기 위해 pod install을 진행해줘야 해요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-bash"},"cd ios\npod install\ncd ..\n")),"\n",r.createElement(t.h3,{id:"2-2-android-추가-작업",style:{position:"relative"}},r.createElement(t.a,{href:"#2-2-android-%EC%B6%94%EA%B0%80-%EC%9E%91%EC%97%85","aria-label":"2 2 android 추가 작업 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2-2. android 추가 작업"),"\n",r.createElement(t.p,null,'android의 경우 "',"android/app/src/main/java/<프로젝트명>/MainActivity.java",'" 에서 아래의 코드를 추가해야해요.'),"\n",r.createElement(t.p,null,"아래 코드를 추가하지 않으면 앱을 백그라운드에서 포그라운드로 전환할 때 비정상 종료가 발생하는 경우가 생겨요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-java"},"// android/app/src/main/java/<프로젝트명>/MainActivity.java\n\npublic class MainActivity extends ReactActivity {\n  // ...\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(null);\n  }\n  // ...\n}\n")),"\n",r.createElement(t.h3,{id:"2-3-ios-android-공통-작업",style:{position:"relative"}},r.createElement(t.a,{href:"#2-3-ios-android-%EA%B3%B5%ED%86%B5-%EC%9E%91%EC%97%85","aria-label":"2 3 ios android 공통 작업 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2-3. ios, android 공통 작업"),"\n",r.createElement(t.p,null,"@react-navigation/stack의 dependency인 react-native-gesture-handler를 index.js에서 import해줘요."),"\n",r.createElement(t.p,null,"그렇지 않으면 빌드 중 오류가 발생하거나 화면 전환에 문제가 생길 수 있어요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-js"},"// index.js\n\n// ...\n- import 'react-native-gesture-handler';\n// ...\n")),"\n",r.createElement(t.h2,{id:"3-테스트-화면-작성",style:{position:"relative"}},r.createElement(t.a,{href:"#3-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%99%94%EB%A9%B4-%EC%9E%91%EC%84%B1","aria-label":"3 테스트 화면 작성 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. 테스트 화면 작성"),"\n",r.createElement(t.p,null,"테스트 화면은 아래와 같이 구성할 예정이에요."),"\n",r.createElement(t.p,null,"기존에 루트 디렉토리에 있던 App.tsx를 src/screens 폴더를 만든 후에 옮겨주세요."),"\n",r.createElement(t.p,null,"마찬 가지로 src/screens 폴더 안에 Navigator.tsx, Screen1.tsx와 Screen2.tsx 파일을 만들어주세요."),"\n",r.createElement(t.p,null,"그리고 Navigation의 type을 선언하기 위한 Navigation.ts 파일을 types 폴더를 만든 후에 만들어주세요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,null,"📦src\n ┣ 📂screens\n ┃ ┣ 📜App.tsx\n ┃ ┣ 📜Navigator.tsx\n ┃ ┣ 📜Screen1.tsx\n ┃ ┗ 📜Screen2.tsx\n ┗ 📂types\n ┃ ┗ 📜Navigation.ts\n")),"\n",r.createElement(t.h3,{id:"3-1-navigationts-타입-코드-작성",style:{position:"relative"}},r.createElement(t.a,{href:"#3-1-navigationts-%ED%83%80%EC%9E%85-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1","aria-label":"3 1 navigationts 타입 코드 작성 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3-1. Navigation.ts 타입 코드 작성"),"\n",r.createElement(t.p,null,"다른 코드들을 작성하기에 앞서 Naivgation에 어떤 스크린들이 존재하는지 타입을 지정해요."),"\n",r.createElement(t.p,null,"우리는 Screen1과 Screen2만 존재하기 때문에 아래와 같이 타입을 설정해요."),"\n",r.createElement(t.p,null,"Screen1: 과 Screen2: 의 undefined 값은 각 스크린들을 화면에 띄울 때 필요한 타입이 존재하지 않는다는 뜻이에요."),"\n",r.createElement(t.p,null,"이에 관해서는 이어지는 포스팅에서 더 설명해보도록 하고 지금은 넘어가도록 할게요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-ts"},"// src/types/Navigation.ts\n\nexport type NaviParamList = {\n\tScreen1: undefined;\n\tScreen2: undefined;\n};\n")),"\n",r.createElement(t.h3,{id:"3-2-screen1tsx-코드-작성",style:{position:"relative"}},r.createElement(t.a,{href:"#3-2-screen1tsx-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1","aria-label":"3 2 screen1tsx 코드 작성 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3-2. Screen1.tsx 코드 작성"),"\n",r.createElement(t.p,null,"크게 어려운 내용은 없지만 설명을 덧붙이자면 우리가 위의 ",r.createElement(t.a,{href:"/posts/2023/09/react-native-react-navigation-1/#3-1-navigationts-%ED%83%80%EC%9E%85-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1"},"3-1"),"에서 선언해놨던 NaviParamList와 현재 스크린 명을 명시해서 NavigationProp을 선언해요."),"\n",r.createElement(t.p,null,"그 후 useNavigation 훅을 통해 선언해놓은 NavigationProp 타입을 사용하는 navigation 변수를 생성해요."),"\n",r.createElement(t.p,null,"Screen-2로 이동 버튼에 onPress event를 붙여서 Screen2로 이동하는 함수를 실행시켜요."),"\n",r.createElement("img",{src:i,style:{width:250,margin:"auto",display:"block",marginBottom:20},alt:"react-native navigation screen1"}),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-tsx"},"// src/screens/Screen1.tsx\n\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { NaviParamList } from '../types/Navigation';\nimport { useNavigation } from '@react-navigation/native';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tbutton: {\n\t\tpadding: 10,\n\t\tbackgroundColor: 'black',\n\t},\n\tbuttonLabel: {\n\t\tcolor: 'white',\n\t},\n});\n\ntype NavigationProp = StackNavigationProp<NaviParamList, 'Screen1'>;\n\nexport default function Screen1() {\n\tconst navigation = useNavigation<NavigationProp>();\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Screen2')}>\n\t\t\t\t<Text style={styles.buttonLabel}>Screen-2로 이동</Text>\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n}\n\n")),"\n",r.createElement(t.h3,{id:"3-2-screen2tsx-코드-작성",style:{position:"relative"}},r.createElement(t.a,{href:"#3-2-screen2tsx-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1","aria-label":"3 2 screen2tsx 코드 작성 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3-2. Screen2.tsx 코드 작성"),"\n",r.createElement(t.p,null,"위의 ",r.createElement(t.a,{href:"/posts/2023/09/react-native-react-navigation-1/#3-2-screen1tsx-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1"},"Screen1"),"과 동일해요."),"\n",r.createElement("img",{src:c,style:{width:250,margin:"auto",display:"block",marginBottom:20},alt:"react-native navigation screen2"}),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-tsx"},"// src/screens/Screen2.tsx\n\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { NaviParamList } from '../types/Navigation';\nimport { useNavigation } from '@react-navigation/native';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tbutton: {\n\t\tpadding: 10,\n\t\tbackgroundColor: 'black',\n\t},\n\tbuttonLabel: {\n\t\tcolor: 'white',\n\t},\n});\n\ntype NavigationProp = StackNavigationProp<NaviParamList, 'Screen2'>;\n\nexport default function Screen2() {\n\tconst navigation = useNavigation<NavigationProp>();\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Screen1')}>\n\t\t\t\t<Text style={styles.buttonLabel}>Screen-1로 이동</Text>\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n}\n")),"\n",r.createElement(t.h3,{id:"3-4-navigatortsx-코드-작성",style:{position:"relative"}},r.createElement(t.a,{href:"#3-4-navigatortsx-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1","aria-label":"3 4 navigatortsx 코드 작성 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3-4. Navigator.tsx 코드 작성"),"\n",r.createElement(t.p,null,"이제 위에서 만든 Screen1과 Screen2를 연결할 네이게이터를 만들어야겠죠?"),"\n",r.createElement(t.p,null,"우선 createStackNavigator를 사용해서 Stack 객체를 만들어줘요."),"\n",r.createElement(t.p,null,"그 이후 아래의 코드와 같이 포함시키고 싶은 스크린들을 넣어줘요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-tsx"},"// src/screens/Navigator.tsx\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NaviParamList } from '../types/Navigation';\nimport Screen1 from './Screen1';\nimport Screen2 from './Screen2';\n\nconst Stack = createStackNavigator<NaviParamList>();\n\nexport default function Navigator() {\n\treturn (\n\t\t<Stack.Navigator>\n\t\t\t<Stack.Screen name=\"Screen1\" component={Screen1} />\n\t\t\t<Stack.Screen name=\"Screen2\" component={Screen2} />\n\t\t</Stack.Navigator>\n\t);\n}\n")),"\n",r.createElement(t.h3,{id:"3-5-apptsx-코드-수정",style:{position:"relative"}},r.createElement(t.a,{href:"#3-5-apptsx-%EC%BD%94%EB%93%9C-%EC%88%98%EC%A0%95","aria-label":"3 5 apptsx 코드 수정 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3-5. App.tsx 코드 수정"),"\n",r.createElement(t.p,null,"이제 App.tsx의 기본 코드들을 모두 지운 후에 아래 코드와 같이 NavigationContainer로 위에서 만들어준 Navigator를 감싸줘요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-tsx"},"// src/screens/App.tsx\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\nimport Navigator from './Navigator';\n\nexport default function App() {\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Navigator />\n\t\t</NavigationContainer>\n\t);\n}\n")),"\n",r.createElement(t.h3,{id:"3-6-indexjs-코드-수정",style:{position:"relative"}},r.createElement(t.a,{href:"#3-6-indexjs-%EC%BD%94%EB%93%9C-%EC%88%98%EC%A0%95","aria-label":"3 6 indexjs 코드 수정 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3-6. index.js 코드 수정"),"\n",r.createElement(t.p,null,"마지막으로 index.js의 App.tsx import 경로를 수정해주면 끝이에요!"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-diff"},"// ...\n\n- import App from './App';\n+ import App from './src/screens/App';\n\n// ...\n")),"\n",r.createElement(t.h2,{id:"4-실행",style:{position:"relative"}},r.createElement(t.a,{href:"#4-%EC%8B%A4%ED%96%89","aria-label":"4 실행 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4. 실행"),"\n",r.createElement(t.p,null,"이제 위에서 작성한 코드들이 잘 동작하는지 확인해요."),"\n",r.createElement(t.p,null,"아마 잘 작동할텐데요."),"\n",r.createElement(t.p,null,"react-native 0.7 버전 이후로 새로 만든 프로젝트가 실행 중 오류가 발생하는 경우가 있어요."),"\n",r.createElement(t.p,null,"Unable to boot device in current state: Booted 라는 문구가 뜨면서 말이죠."),"\n",r.createElement(t.p,null,"이런 경우 해결은 ",r.createElement(t.a,{href:"/posts/2023/09/react-native-unable-to-boot-device"},"이 포스팅"),"을 확인해주세요."),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-bash"},"# ios test\nyarn ios\n\n# android test\nyarn android\n")),"\n",r.createElement(t.hr),"\n",r.createElement(t.h2,{id:"전체-코드",style:{position:"relative"}},r.createElement(t.a,{href:"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C","aria-label":"전체 코드 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"전체 코드"),"\n",r.createElement(t.p,null,r.createElement(t.a,{href:"https://github.com/flaassh/react-navigation-practice/tree/main/navigation-1"},"https://github.com/flaassh/react-navigation-practice/tree/main/navigation-1")),"\n",r.createElement(t.hr),"\n",r.createElement(t.h2,{id:"정리하며",style:{position:"relative"}},r.createElement(t.a,{href:"#%EC%A0%95%EB%A6%AC%ED%95%98%EB%A9%B0","aria-label":"정리하며 permalink",className:"anchor before"},r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"정리하며"),"\n",r.createElement(t.p,null,"오늘은 react-navigation을 이용하여 화면을 전환하는 방법을 간단한 코드를 작성해서 알아봤어요."),"\n",r.createElement(t.p,null,"다음 포스팅에서는 react-navigation의 navigate, push, replace 등의 화면 전환 함수들을 어떤 상황에\n어떻게 사용해야 하는지에 대해 알아보도록 해요."))}var o=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.a)(),e.components);return t?r.createElement(t,e,r.createElement(l,e)):l(e)}},8890:function(e,t,n){n.a(e,(async function(e,a){try{n.r(t),n.d(t,{Head:function(){return H},default:function(){return _}});var r=n(7578),i=n(7294),c=n(394),l=n(1151),o=n(3476),s=n(2742),m=n(4764),d=n(4428),p=n(6337),h=n(7526),v=n(9878),g=n(1006),u=e([h]);h=(u.then?(await u)():u)[0];const f=c.default.div.withConfig({displayName:"mdxfields__slug__BodyContainer",componentId:"sc-13a3pz0-0"})(["width:100%;"]),S=c.default.div.withConfig({displayName:"mdxfields__slug__ContentContainer",componentId:"sc-13a3pz0-1"})(["width:100%;max-width:860px;margin:auto;padding-top:78px;margin-bottom:40px;","{max-width:928px;padding:78px 34px 0;}","{padding:78px 20px 0;}"],d.Z.custom(1199),d.Z.custom(767)),x=c.default.span.withConfig({displayName:"mdxfields__slug__CategoryLabel",componentId:"sc-13a3pz0-2"})(["color:black;font-size:0.875em;font-weight:600;margin-bottom:8px;"]),C=c.default.h1.withConfig({displayName:"mdxfields__slug__TitleLabel",componentId:"sc-13a3pz0-3"})(["font-size:1.5em;font-weight:400;color:",";margin-bottom:10px;"],m.Z.viloet[6]),b=c.default.div.withConfig({displayName:"mdxfields__slug__DateContainer",componentId:"sc-13a3pz0-4"})(["margin-bottom:12px;p{color:",";font-size:0.8em;}"],m.Z.gray[6]),y=c.default.div.withConfig({displayName:"mdxfields__slug__MdxContainer",componentId:"sc-13a3pz0-5"})(["width:100%;h2,h3,h4,h5,h6{font-weight:400;}.h2-div{margin:29px 0 22px;padding-left:10px;padding-bottom:2px;border-left:5px solid ",";border-top-left-radius:2px;border-bottom-left-radius:2px;}h2{font-size:1.5em;","{font-size:1.25em;}.anchor{left:-15px;}}.anchor{svg{width:20px;height:20px;fill:",";}}h3{margin:22px 0 15px;}h4{margin-bottom:10px;}h6{color:",";}a:not(.anchor){color:",";&:hover{color:",";font-weight:500;font-size:1.05em;transition:0.5s;}}p{font-size:1em;margin-bottom:22px;line-height:1.6;}hr{background-color:",";height:1px;border:0;margin:20px 0 40px;}.gatsby-resp-image-wrapper{margin-bottom:20px;}li{font-size:1em;margin-bottom:6px;}pre{margin:0;}strong{color:",";}"],m.Z.viloet[6],d.Z.custom(767),m.Z.viloet[6],m.Z.gray[5],m.Z.viloet[5],m.Z.viloet[7],m.Z.gray[2],m.Z.viloet[6]),N=c.default.div.withConfig({displayName:"mdxfields__slug__FooterContainer",componentId:"sc-13a3pz0-6"})(["width:100%;"]),B={h2:e=>i.createElement("div",{className:"h2-div"},i.createElement("h2",e)),code:h.Z};function w(e){let{data:t,children:n}=e;return i.createElement(o.Z,null,i.createElement(s.Z,null),i.createElement(f,null,i.createElement(S,null,void 0!==t.mdx.frontmatter.category&&i.createElement(x,null,t.mdx.frontmatter.category),i.createElement(C,null,t.mdx.frontmatter.title),i.createElement(b,null,i.createElement("p",null,"게시: ",(0,g.Z)(t.mdx.frontmatter.created_at)),t.mdx.frontmatter.updated_at&&i.createElement("p",null,"수정: ",(0,g.Z)(t.mdx.frontmatter.updated_at))),i.createElement(y,null,i.createElement(l.Z,{components:B},n)))),i.createElement(N,null,i.createElement(p.Z,null)))}function _(e){return i.createElement(w,e,i.createElement(r.Z,e))}const H=e=>{let{data:t}=e;return i.createElement(v.Z,{title:t.mdx.frontmatter.title,description:t.mdx.frontmatter.description,pathname:t.mdx.fields.slug,image:t.mdx.frontmatter.thumbnail.childImageSharp.fixed.src,created_at:t.mdx.frontmatter.created_at,updated_at:t.mdx.frontmatter.updated_at})};a()}catch(E){a(E)}}))}}]);
//# sourceMappingURL=component---src-pages-mdx-fields-slug-tsx-content-file-path-contents-posts-2023-09-react-native-react-navigation-1-mdx-0e9978ef697e757cdacf.js.map